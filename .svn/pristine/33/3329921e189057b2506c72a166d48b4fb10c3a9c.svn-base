package core;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
//make singleton
public class makeJsonData {
	JSONObject result;
	JSONArray jarray[] = new JSONArray[10];
	makeJsonDateTree structs;
	int parentCheck = 10000000;
	boolean checkfirst = false;
	
	private makeJsonData(String company){
		structs = new makeJsonDateTree("start", "-1", "-1", "-1", "0", company);
	}
	
	private static class SingletonHolder { 
		static String company;
		SingletonHolder(String company){
			this.company = company;
		}
		private final static makeJsonData instance = new makeJsonData(company);
	}

	public static makeJsonData getInstance(String company) {
		return SingletonHolder.instance;
	}


	public boolean parsingData( String id, String text, String depth, String parent, String index, String company ){
		int dp = Integer.parseInt(depth), max = 0;
		String pr = parent;
		makeJsonDateTree data = structs;
		while(max < dp){
			data = data.goChild(""+pr.charAt(max));
			if(data == null){
				return false;
			}
			max++;
		}
		data.makeChild(text, depth, parent, id, index, company);
		return true;
	}	
	
	public JSONObject toJson(){
		makeJson(structs);
		return structs.obj;
	}
	
	public void makeJson(makeJsonDateTree datas){
		while(!datas.isLastChild()){
			makeJson(datas.returnChild());			
		}
		datas.makeChildToJsonArray();
	}
}
